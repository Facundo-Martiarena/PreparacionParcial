package uy.edu.ucu.aed2;

import org.junit.Before;
import org.junit.Test;


import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class TestGrafoDirigido {
    
    Collection<TVertice> vertices;
    TAristas as;
    TGrafoDirigido g;

    @Before
    public void setUp(){
        TVertice v1 = new TVertice<>("1");
        TVertice v2 = new TVertice<>("2");
        TVertice v3 = new TVertice<>("3");
        TVertice v4 = new TVertice<>("4");
        TVertice v5 = new TVertice<>("5");
        vertices = new LinkedList<>();
        
        vertices.add(v1);
        vertices.add(v2);
        vertices.add(v3);
        vertices.add(v4);
        vertices.add(v5);
    }

    @Test
    public void esConexo(){
        TArista a12 = new TArista("1", "2", 1);
        TArista a23 = new TArista("2", "3", 1);
        TArista a34 = new TArista("3", "4", 1);
        TArista a45 = new TArista("4", "5", 1);


        as = new TAristas();
        as.add(a12);
        as.add(a23);
        as.add(a34);
        as.add(a45);
        g = new TGrafoDirigido(vertices, as);

        assertTrue(g.esConexo());
    }

    @Test
    public void componentesFuertes(){
        TArista a12 = new TArista("1", "2", 1);
        TArista a23 = new TArista("2", "3", 1);
        TArista a34 = new TArista("3", "4", 1);
        TArista a45 = new TArista("4", "5", 1);
        TArista a31 = new TArista("3", "1", 1);
        
        as = new TAristas();
        as.add(a12);
        as.add(a23);
        as.add(a34);
        as.add(a45);
        as.add(a31);

        g = new TGrafoDirigido(vertices, as);

        assertEquals(2, g.componentesFuertes().size());
    }
}